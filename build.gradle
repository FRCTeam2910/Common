import java.nio.charset.StandardCharsets

plugins {
    id 'java-library'
    id 'maven-publish'
    id 'net.ltgt.errorprone' version '3.0.1'
    id 'com.diffplug.spotless' version '6.12.0'
    id "com.palantir.java-format" version "2.28.0"
}

sourceCompatibility = JavaVersion.VERSION_11
targetCompatibility = JavaVersion.VERSION_11

allprojects {
    group = 'org.frcteam2910.common'
    version = '2023.0.0'

    repositories {
        mavenCentral()
        maven {
            url = 'https://frcmaven.wpi.edu/artifactory/release/'
        }
    }
}

dependencies {
    api group: 'edu.wpi.first.wpimath', name: 'wpimath-java', version: '2023.4.2'
    api group: 'edu.wpi.first.wpimath', name: 'wpimath-jni', version: '2023.4.2', classifier: 'windowsx86-64'

    api group: 'edu.wpi.first.wpiutil', name: 'wpiutil-java', version: '2023.4.2'
    api group: 'edu.wpi.first.wpiutil', name: 'wpiutil-jni', version: '2023.4.2', classifier: 'windowsx86-64'

    api group: 'com.fasterxml.jackson.core', name: 'jackson-annotations', version: '2.12.4'
    api group: 'com.fasterxml.jackson.core', name: 'jackson-core', version: '2.12.4'
    api group: 'com.fasterxml.jackson.core', name: 'jackson-databind', version: '2.12.4'

    implementation 'com.google.errorprone:error_prone_annotations:2.16'
    errorprone('com.google.errorprone:error_prone_core:2.16')

    api group: 'org.ejml', name: 'ejml-simple', version: '0.38'
    api group: 'com.google.code.gson', name: 'gson', version: '2.8.6'

    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.8.2'
    testImplementation 'org.junit.jupiter:junit-jupiter-params:5.8.2'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.8.2'

    testImplementation group: 'org.hamcrest', name: 'hamcrest-library', version: '1.3'
    testImplementation group: "com.github.sh0nk", name: "matplotlib4j", version: '0.4.0'
}

test {
    useJUnitPlatform()
    systemProperty 'junit.jupiter.extensions.autodetection.enabled', 'true'
}

publishing {
    publications {
        common(MavenPublication) {
            from components.java
        }
    }
}

// Configure string concat to always inline compile
tasks.withType(JavaCompile) {
    options.compilerArgs.add '-XDstringConcat=inline'
}

tasks.withType(JavaCompile).configureEach {
    options.errorprone.disableWarningsInGeneratedCode = true
}

spotless {
    java {
        target fileTree('src') {
            include '**/*.java'
            exclude '**/build/**', '**/build-*/**'
        }
        toggleOffOn()
        palantirJavaFormat
//        googleJavaFormat().aosp().reflowLongStrings(true)
        setEncoding(StandardCharsets.UTF_8)
        setLineEndings('WINDOWS')
        indentWithSpaces(4)
        trimTrailingWhitespace()
        endWithNewline()
        importOrder('java', '', '\\#').wildcardsLast()
        removeUnusedImports()
    }
}

build.dependsOn spotlessApply